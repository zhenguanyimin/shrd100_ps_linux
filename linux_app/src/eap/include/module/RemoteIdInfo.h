#ifndef __REMOTEID_INFO__
#ifdef __cplusplus
extern "C" {
#endif // __cplusplus


#include <stdint.h>
#define OPERATORID_ID_SIZE 20
#define UAV_ID_SIZE        20

typedef enum 
{
	DEVICE_TYPE_UNKNOWN = 0,
	DEVICE_TYPE_LITE = 1,
	DEVICE_TYPE_PARROT = 2,
}UAV_DEVICE_TYPE;

typedef enum 
{
	// Autel
	DEVICE_TYPE_UNKNOWN_UAV = 0,
	DEVICE_TYPE_AUTEL_EVO_NANO,
	DEVICE_TYPE_AUTEL_EVO_LITE,             
	DEVICE_TYPE_AUTEL_EVO_MAX,
	DEVICE_TYPE_AUTEL_EVO_II,
	DEVICE_TYPE_AUTEL_EVO_DRAGFISH_PRO,
	DEVICE_TYPE_AUTEL_EVO_DRAGFISH_LITE,
	DEVICE_TYPE_AUTEL_EVO_DRAGFISH_STD,

    // Parrot
	DEVICE_TYPE_PARROT_ANAFI_USA,
	DEVICE_TYPE_PARROT_ANAFI_AI,

	// Skydio
	DEVICE_TYPE_SKYDIO_X2E,
	DEVICE_TYPE_SKYDIO_2,

	// Percepto AirMax
	DEVICE_TYPE_PERCEPTO_AIRMAX,

	// Microdrones
	DEVICE_TYPE_MICRODRONES_MD4_1000,
	DEVICE_TYPE_MICRODRONES_MD4_3000,
	DEVICE_TYPE_MICRODRONES_EASY_ONE,

	// Wingtra
	DEVICE_TYPE_WINGTRA_GEN_II,

	// AgEagle(senseFly)
	DEVICE_TYPE_AGEAGLE_EBEE_X_SERIES,

	// Sony
	DEVICE_TYPE_SONY_ARS_S1,

	// Commaris
	DEVICE_TYPE_COMMARIS_SEEKER,

	// Elsight Ltd.
	DEVICE_TYPE_ELSIGHT_HNF4W,

	// Dronetag
	DEVICE_TYPE_DRONETAG_BEACON,
	DEVICE_TYPE_DRONETAG_BS,
	DEVICE_TYPE_DRONETAG_DRI,
	DEVICE_TYPE_DRONETAG_MINI,

	// EXO
	DEVICE_TYPE_EXO_X7_RANGER_PLUS,
	DEVICE_TYPE_EXO_BLACKHAWK_3_PRO,

	// Zephyr Systems
	DEVICE_TYPE_ZEPHYR_SYSTEMS_MODULE_100,
	DEVICE_TYPE_ZEPHYR_SYSTEMS_ARK_350,
	DEVICE_TYPE_ZEPHYR_SYSTEMS_OKO_250,

	// Inspired Flight
	DEVICE_TYPE_INSPIRED_FLIGHT_IF1200A,

	// BlueMark
	DEVICE_TYPE_BLUEMARK_DB100,
	DEVICE_TYPE_BLUEMARK_DB121,
	DEVICE_TYPE_BLUEMARK_DB121PCB,
	DEVICE_TYPE_BLUEMARK_DB122FPV,
	DEVICE_TYPE_BLUEMARK_DB120,

	// Drone Defence
	DEVICE_TYPE_DRONE_DEFENCE_AEROPING,

	// Harris Aerial
	DEVICE_TYPE_HARRIS_AERIAL_CARRIER_H6,
	DEVICE_TYPE_HARRIS_AERIAL_CARRIER_H8E,

	// Wing Aviation LLC
	DEVICE_TYPE_WING_AVIATION_HUMMINGBIRD_V2,

	// SJRC
	DEVICE_TYPE_SJRC_F5S_PRO,
	DEVICE_TYPE_SJRC_F5S_PRO_PLUS,
	DEVICE_TYPE_SJRC_F7_4K_PRO,
	DEVICE_TYPE_SJRC_F11_4K_PRO,
	DEVICE_TYPE_SJRC_F11S_4K_PRO,
	DEVICE_TYPE_SJRC_F22_4K_PRO,
	DEVICE_TYPE_SJRC_F22S_4K_PRO,

	// Aurelia
	DEVICE_TYPE_AURELIA_TAROT_650,
	DEVICE_TYPE_AURELIA_X4,
	DEVICE_TYPE_AURELIA_X6_STANDARD,
	DEVICE_TYPE_AURELIA_X6_PRO,
	DEVICE_TYPE_AURELIA_X6_MAX,
	DEVICE_TYPE_AURELIA_X6_PRO_V2,
	DEVICE_TYPE_AURELIA_X8_STANDARD,
	DEVICE_TYPE_AURELIA_X8_MAX,

	// Vision Aerial
	DEVICE_TYPE_VISION_AERIAL_DRONE,

	// Watts Innovations
	DEVICE_TYPE_WATTS_INNOVATIONS_PRISM_SKY,	
	DEVICE_TYPE_WATTS_INNOVATIONS_PRISM_LITE,

	// TRIPLEFINE
	DEVICE_TYPE_TRIPLEFINE_TF35_PRO,
	DEVICE_TYPE_TRIPLEFINE_TF_15EX,	

	// Leica Geosystems
	DEVICE_TYPE_LEICA_GEOSYSTEMS_BLK2FLY,

	// Bwine
	DEVICE_TYPE_BWINE_F7GB2,

	// XM2 Labs
	DEVICE_TYPE_XM2_LABS_XTD_120,

	// Drone Volt
	DEVICE_TYPE_HERCULES_20,

	// Flytrex
	DEVICE_TYPE_FLYTREX_FTX_M600P,

	// Hylio
	DEVICE_TYPE_HYLIO_AG_210,
	DEVICE_TYPE_HYLIO_AG_216,
	DEVICE_TYPE_HYLIO_AG_230,
	DEVICE_TYPE_HYLIO_AG_272,

	// Coretronic
	DEVICE_TYPE_CORETRONIC_SIRAS,

	// Ascent AeroSystems
	DEVICE_TYPE_ASCENT_AEROSYSTEMS_NX30,
	DEVICE_TYPE_ASCENT_AEROSYSTEMS_SPIRIT,

	// uAvionix
	DEVICE_TYPE_UAVIONIX_PINGRID,

	// XAG
	DEVICE_TYPE_XAG_P100,
	DEVICE_TYPE_XAG_P100_PRO,

	// Event38 Unmanned Systems
	DEVICE_TYPE_EVENT38_UNMANNED_SYSTEMS_E455,
	DEVICE_TYPE_EVENT38_UNMANNED_SYSTEMS_E400,

	// Hoverfly Technologies
	DEVICE_TYPE_HOVERFLY_SENTRY_SPECTRE,

	// SkyRanger / SkyRaider
	DEVICE_TYPE_SKYRANGER_SKYRAIDER_R70_R80D,

	// UAS
	DEVICE_TYPE_UAS_RC,

	// Censys Technologies
	DEVICE_TYPE_CENSYS_SENTAERO_5,

	// Flightware
	DEVICE_TYPE_FLIGHTWARE_EDGE_130,

	// Cider Copter
	DEVICE_TYPE_CIDER_COPTER_H10,

	// Teal Drones
	DEVICE_TYPE_TEAL_DRONES_TEAL_2,

	// Camflite
	DEVICE_TYPE_CAMFLITE_AURORA_ASCENT,

	// SmartDrone
	DEVICE_TYPE_SMARTDRONE_DISCOVERY_2,

	// WISPR
	DEVICE_TYPE_WISPR_RANGER_PRO_1100,
	DEVICE_TYPE_WISPR_RANGER_ELITE,
	
	// Holy Stone
	DEVICE_TYPE_HOLY_STONE_HSRID01,
	DEVICE_TYPE_HOLY_STONE_HS720G,
	DEVICE_TYPE_HOLY_STONE_HS720R,
	DEVICE_TYPE_HOLY_STONE_HS720,
	DEVICE_TYPE_HOLY_STONE_HS700E,
	DEVICE_TYPE_HOLY_STONE_HS720E,
	DEVICE_TYPE_HOLY_STONE_HS600,

	// Workhorse Aero
	DEVICE_TYPE_WORKHORSE_AERO_WA4_100,

	// Draganfly Innovations
	DEVICE_TYPE_DRAGANFLY_COMMANDER3_XL,

	// Ruko
	DEVICE_TYPE_RUKO_F11GIM,
	DEVICE_TYPE_RUKO_U11S,
	DEVICE_TYPE_RUKO_U11PRO,
	DEVICE_TYPE_RUKO_F11,
	DEVICE_TYPE_RUKO_F11GIM2,
	DEVICE_TYPE_RUKO_R111,
	DEVICE_TYPE_RUKO_F11PRO,

	// Matternet
	DEVICE_TYPE_MATTERNET_M2_BLOCK_2,

	// Skyfront
	DEVICE_TYPE_SKYFRONT_PERIMETER_8,

	// Tucok
	DEVICE_TYPE_TUCOK_193MAX2S,
	DEVICE_TYPE_TUCOK_T70,
	DEVICE_TYPE_TUCOK_012S,

	// Aero Systems West
	DEVICE_TYPE_AERO_SYS_WEST_INTER_LIFT,
	DEVICE_TYPE_AERO_SYS_WEST_HEAVY_LIFT,

	// Lucid Bots
	DEVICE_TYPE_LUCID_BOTS_SHERPA,

	// PrecisionVision
	DEVICE_TYPE_PRECISIONVISION_PV40X,

	// Drone-Clone Xperts
	DEVICE_TYPE_DRONE_CLONE_XPERTS_LLIMITLESS_4S,

	// Spektrum
	DEVICE_TYPE_SPEKTRUM_SPMA9500_SKYID,

	// C100
	DEVICE_TYPE_C100_BLOCK_1C,

	// Zipline
	DEVICE_TYPE_ZIPLINE_SPARROW,

	// Veeniix
	DEVICE_TYPE_VEENIIX_V11,

	// Fotokite
	DEVICE_TYPE_FOTOKITE_SIGMA,

	// DIY-D LLC
	DEVICE_TYPE_DIY_D_LLC_ESP32_C3_MINI_1,

	// Xil
	DEVICE_TYPE_XIL_193E,

	// Sentera
	DEVICE_TYPE_SENTERA_PHX,

	// ELIOS 3 UAV
	DEVICE_TYPE_ELIOS_3_UAV_107000,

	// Arcsky
	DEVICE_TYPE_ARCSKY_X55,

	// Amazon Prime Air
	DEVICE_TYPE_AMAZON_PRIME_AIR_MK27_2,

	// Quantum-Systems
	DEVICE_TYPE_QUANTUM_SYSTEMS_TRINITY_R6,
	DEVICE_TYPE_QUANTUM_SYSTEMS_TRINITY_R7,
	DEVICE_TYPE_QUANTUM_SYSTEMS_TRINITY_R8,
	DEVICE_TYPE_QUANTUM_SYSTEMS_TRINITY_R10,
	DEVICE_TYPE_QUANTUM_SYSTEMS_TRINITY_R14,

	// idME
	DEVICE_TYPE_IDME_PRO,

	// Pierce Aerospace
	DEVICE_TYPE_PIERCE_AEROSPACE_B1,

}UAV_DEVICE_TYPE_BY_SN;


typedef struct _remoteId_Info
{
	uint32_t pilotLongitude;
    uint32_t pilotLatitude;
    uint32_t uavLongitude;
    uint32_t uavLatitude;
    uint16_t uavAtmosAltitude;
    uint16_t uavEarthAltitude;
    uint16_t uavHeightAgl;
    uint16_t uavSpeedMultip;
    uint8_t uavDirection;
    uint8_t uavAbsolSpeed;
    uint8_t uavVertSpeed;
    uint32_t uavRecordTime;
    uint32_t uFreq;
	uint32_t uChn;
	uint8_t  mac[6];
	char dbm_ant_signal;
	char dbm_ant_noise;
	int32_t  rssi;
	uint32_t operatorIdType;
	char operatorId[OPERATORID_ID_SIZE+1];
	char uavId[UAV_ID_SIZE+1];
	char uasid[OPERATORID_ID_SIZE+1];
	char selfid[OPERATORID_ID_SIZE+1];
	double latitude;
	double longitude;
	float altitude;
	float atmosaltitude;
	float earthaltitude;
	double pilot_latitude;
	double pilot_longitude;
	float direction;
	float speedHorizontal;
	float speedVertical;
	uint32_t HeightType;
} RemoteId_Info;

#ifdef __cplusplus
}
#endif // __cplusplus

#endif
