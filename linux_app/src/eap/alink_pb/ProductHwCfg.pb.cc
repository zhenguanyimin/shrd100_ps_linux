// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProductHwCfg.proto

#include "ProductHwCfg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
constexpr PbGpioConfiguration_PbGpioCfgData::PbGpioConfiguration_PbGpioCfgData(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , direction_(0)

  , enabled_(false)
  , mode_(0)

  , deviceid_(0)
  , axichl_(0)
  , pinnum_(0)
  , initlevel_(0)
{}
struct PbGpioConfiguration_PbGpioCfgDataDefaultTypeInternal {
  constexpr PbGpioConfiguration_PbGpioCfgDataDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PbGpioConfiguration_PbGpioCfgDataDefaultTypeInternal() {}
  union {
    PbGpioConfiguration_PbGpioCfgData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PbGpioConfiguration_PbGpioCfgDataDefaultTypeInternal _PbGpioConfiguration_PbGpioCfgData_default_instance_;
constexpr PbGpioConfiguration::PbGpioConfiguration(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : gpiocfglist_()
  , miobasepinnum_(0)
  , emiobasepinnum_(0)
  , linuxbasepinnum_(0){}
struct PbGpioConfigurationDefaultTypeInternal {
  constexpr PbGpioConfigurationDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PbGpioConfigurationDefaultTypeInternal() {}
  union {
    PbGpioConfiguration _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PbGpioConfigurationDefaultTypeInternal _PbGpioConfiguration_default_instance_;
constexpr ProductHwCfg::ProductHwCfg(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : producthwtype_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , desc_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , devttytypec_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , devttymcu2ps_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , devttywifibluetooth_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , gpioconfig_(nullptr){}
struct ProductHwCfgDefaultTypeInternal {
  constexpr ProductHwCfgDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ProductHwCfgDefaultTypeInternal() {}
  union {
    ProductHwCfg _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ProductHwCfgDefaultTypeInternal _ProductHwCfg_default_instance_;
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ProductHwCfg_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ProductHwCfg_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ProductHwCfg_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ProductHwCfg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration_PbGpioCfgData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration_PbGpioCfgData, name_),
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration_PbGpioCfgData, direction_),
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration_PbGpioCfgData, enabled_),
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration_PbGpioCfgData, mode_),
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration_PbGpioCfgData, deviceid_),
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration_PbGpioCfgData, axichl_),
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration_PbGpioCfgData, pinnum_),
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration_PbGpioCfgData, initlevel_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration, miobasepinnum_),
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration, emiobasepinnum_),
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration, linuxbasepinnum_),
  PROTOBUF_FIELD_OFFSET(::PbGpioConfiguration, gpiocfglist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProductHwCfg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ProductHwCfg, producthwtype_),
  PROTOBUF_FIELD_OFFSET(::ProductHwCfg, desc_),
  PROTOBUF_FIELD_OFFSET(::ProductHwCfg, devttytypec_),
  PROTOBUF_FIELD_OFFSET(::ProductHwCfg, devttymcu2ps_),
  PROTOBUF_FIELD_OFFSET(::ProductHwCfg, devttywifibluetooth_),
  PROTOBUF_FIELD_OFFSET(::ProductHwCfg, gpioconfig_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::PbGpioConfiguration_PbGpioCfgData)},
  { 14, -1, -1, sizeof(::PbGpioConfiguration)},
  { 24, -1, -1, sizeof(::ProductHwCfg)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PbGpioConfiguration_PbGpioCfgData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_PbGpioConfiguration_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_ProductHwCfg_default_instance_),
};

const char descriptor_table_protodef_ProductHwCfg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022ProductHwCfg.proto\"\360\004\n\023PbGpioConfigura"
  "tion\022\025\n\rMioBasePinNum\030\001 \001(\005\022\026\n\016EmioBaseP"
  "inNum\030\002 \001(\005\022\027\n\017LinuxBasePinNum\030\003 \001(\005\0227\n\013"
  "gpioCfgList\030\004 \003(\0132\".PbGpioConfiguration."
  "PbGpioCfgData\032\327\003\n\rPbGpioCfgData\022\014\n\004name\030"
  "\001 \001(\t\022\?\n\tdirection\030\002 \001(\0162,.PbGpioConfigu"
  "ration.PbGpioCfgData.Direction\022\017\n\007enable"
  "d\030\003 \001(\010\0225\n\004mode\030\004 \001(\0162\'.PbGpioConfigurat"
  "ion.PbGpioCfgData.Mode\022\020\n\010deviceID\030\005 \001(\005"
  "\022\016\n\006axiChl\030\006 \001(\005\022\016\n\006pinNum\030\007 \001(\005\022B\n\tinit"
  "Level\030\010 \001(\0162/.PbGpioConfiguration.PbGpio"
  "CfgData.VoltageLevel\"*\n\tDirection\022\r\n\tDIR"
  "_INPUT\020\000\022\016\n\nDIR_OUTPUT\020\001\"b\n\004Mode\022\014\n\010MODE"
  "_MIO\020\000\022\r\n\tMODE_EMIO\020\001\022\021\n\rMODE_AXI_GPIO\020\002"
  "\022\021\n\rMODE_AXI_BRAM\020\003\022\027\n\022MODE_GPIO_MODE_MA"
  "X\020\377\001\")\n\014VoltageLevel\022\013\n\007VOL_LOW\020\000\022\014\n\010VOL"
  "_HIGH\020\001\"\246\001\n\014ProductHwCfg\022\025\n\rproductHwTyp"
  "e\030\001 \001(\t\022\014\n\004desc\030\002 \001(\t\022\023\n\013devTtyTypec\030d \001"
  "(\t\022\024\n\014devTtyMcu2Ps\030e \001(\t\022\033\n\023devTtyWifiBl"
  "uetooth\030f \001(\t\022)\n\ngpioConfig\030\310\001 \001(\0132\024.PbG"
  "pioConfigurationb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ProductHwCfg_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ProductHwCfg_2eproto = {
  false, false, 824, descriptor_table_protodef_ProductHwCfg_2eproto, "ProductHwCfg.proto", 
  &descriptor_table_ProductHwCfg_2eproto_once, nullptr, 0, 3,
  schemas, file_default_instances, TableStruct_ProductHwCfg_2eproto::offsets,
  file_level_metadata_ProductHwCfg_2eproto, file_level_enum_descriptors_ProductHwCfg_2eproto, file_level_service_descriptors_ProductHwCfg_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_ProductHwCfg_2eproto_getter() {
  return &descriptor_table_ProductHwCfg_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_ProductHwCfg_2eproto(&descriptor_table_ProductHwCfg_2eproto);
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PbGpioConfiguration_PbGpioCfgData_Direction_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ProductHwCfg_2eproto);
  return file_level_enum_descriptors_ProductHwCfg_2eproto[0];
}
bool PbGpioConfiguration_PbGpioCfgData_Direction_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PbGpioConfiguration_PbGpioCfgData_Direction PbGpioConfiguration_PbGpioCfgData::DIR_INPUT;
constexpr PbGpioConfiguration_PbGpioCfgData_Direction PbGpioConfiguration_PbGpioCfgData::DIR_OUTPUT;
constexpr PbGpioConfiguration_PbGpioCfgData_Direction PbGpioConfiguration_PbGpioCfgData::Direction_MIN;
constexpr PbGpioConfiguration_PbGpioCfgData_Direction PbGpioConfiguration_PbGpioCfgData::Direction_MAX;
constexpr int PbGpioConfiguration_PbGpioCfgData::Direction_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PbGpioConfiguration_PbGpioCfgData_Mode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ProductHwCfg_2eproto);
  return file_level_enum_descriptors_ProductHwCfg_2eproto[1];
}
bool PbGpioConfiguration_PbGpioCfgData_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 255:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PbGpioConfiguration_PbGpioCfgData_Mode PbGpioConfiguration_PbGpioCfgData::MODE_MIO;
constexpr PbGpioConfiguration_PbGpioCfgData_Mode PbGpioConfiguration_PbGpioCfgData::MODE_EMIO;
constexpr PbGpioConfiguration_PbGpioCfgData_Mode PbGpioConfiguration_PbGpioCfgData::MODE_AXI_GPIO;
constexpr PbGpioConfiguration_PbGpioCfgData_Mode PbGpioConfiguration_PbGpioCfgData::MODE_AXI_BRAM;
constexpr PbGpioConfiguration_PbGpioCfgData_Mode PbGpioConfiguration_PbGpioCfgData::MODE_GPIO_MODE_MAX;
constexpr PbGpioConfiguration_PbGpioCfgData_Mode PbGpioConfiguration_PbGpioCfgData::Mode_MIN;
constexpr PbGpioConfiguration_PbGpioCfgData_Mode PbGpioConfiguration_PbGpioCfgData::Mode_MAX;
constexpr int PbGpioConfiguration_PbGpioCfgData::Mode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PbGpioConfiguration_PbGpioCfgData_VoltageLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ProductHwCfg_2eproto);
  return file_level_enum_descriptors_ProductHwCfg_2eproto[2];
}
bool PbGpioConfiguration_PbGpioCfgData_VoltageLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr PbGpioConfiguration_PbGpioCfgData_VoltageLevel PbGpioConfiguration_PbGpioCfgData::VOL_LOW;
constexpr PbGpioConfiguration_PbGpioCfgData_VoltageLevel PbGpioConfiguration_PbGpioCfgData::VOL_HIGH;
constexpr PbGpioConfiguration_PbGpioCfgData_VoltageLevel PbGpioConfiguration_PbGpioCfgData::VoltageLevel_MIN;
constexpr PbGpioConfiguration_PbGpioCfgData_VoltageLevel PbGpioConfiguration_PbGpioCfgData::VoltageLevel_MAX;
constexpr int PbGpioConfiguration_PbGpioCfgData::VoltageLevel_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class PbGpioConfiguration_PbGpioCfgData::_Internal {
 public:
};

PbGpioConfiguration_PbGpioCfgData::PbGpioConfiguration_PbGpioCfgData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PbGpioConfiguration.PbGpioCfgData)
}
PbGpioConfiguration_PbGpioCfgData::PbGpioConfiguration_PbGpioCfgData(const PbGpioConfiguration_PbGpioCfgData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArenaForAllocation());
  }
  ::memcpy(&direction_, &from.direction_,
    static_cast<size_t>(reinterpret_cast<char*>(&initlevel_) -
    reinterpret_cast<char*>(&direction_)) + sizeof(initlevel_));
  // @@protoc_insertion_point(copy_constructor:PbGpioConfiguration.PbGpioCfgData)
}

void PbGpioConfiguration_PbGpioCfgData::SharedCtor() {
name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&direction_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&initlevel_) -
    reinterpret_cast<char*>(&direction_)) + sizeof(initlevel_));
}

PbGpioConfiguration_PbGpioCfgData::~PbGpioConfiguration_PbGpioCfgData() {
  // @@protoc_insertion_point(destructor:PbGpioConfiguration.PbGpioCfgData)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PbGpioConfiguration_PbGpioCfgData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PbGpioConfiguration_PbGpioCfgData::ArenaDtor(void* object) {
  PbGpioConfiguration_PbGpioCfgData* _this = reinterpret_cast< PbGpioConfiguration_PbGpioCfgData* >(object);
  (void)_this;
}
void PbGpioConfiguration_PbGpioCfgData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PbGpioConfiguration_PbGpioCfgData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PbGpioConfiguration_PbGpioCfgData::Clear() {
// @@protoc_insertion_point(message_clear_start:PbGpioConfiguration.PbGpioCfgData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  ::memset(&direction_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&initlevel_) -
      reinterpret_cast<char*>(&direction_)) + sizeof(initlevel_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PbGpioConfiguration_PbGpioCfgData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PbGpioConfiguration.PbGpioCfgData.name"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PbGpioConfiguration.PbGpioCfgData.Direction direction = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_direction(static_cast<::PbGpioConfiguration_PbGpioCfgData_Direction>(val));
        } else
          goto handle_unusual;
        continue;
      // bool enabled = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          enabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PbGpioConfiguration.PbGpioCfgData.Mode mode = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::PbGpioConfiguration_PbGpioCfgData_Mode>(val));
        } else
          goto handle_unusual;
        continue;
      // int32 deviceID = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          deviceid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 axiChl = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          axichl_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 pinNum = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          pinnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PbGpioConfiguration.PbGpioCfgData.VoltageLevel initLevel = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_initlevel(static_cast<::PbGpioConfiguration_PbGpioCfgData_VoltageLevel>(val));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PbGpioConfiguration_PbGpioCfgData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PbGpioConfiguration.PbGpioCfgData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PbGpioConfiguration.PbGpioCfgData.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .PbGpioConfiguration.PbGpioCfgData.Direction direction = 2;
  if (this->_internal_direction() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_direction(), target);
  }

  // bool enabled = 3;
  if (this->_internal_enabled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_enabled(), target);
  }

  // .PbGpioConfiguration.PbGpioCfgData.Mode mode = 4;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_mode(), target);
  }

  // int32 deviceID = 5;
  if (this->_internal_deviceid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_deviceid(), target);
  }

  // int32 axiChl = 6;
  if (this->_internal_axichl() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_axichl(), target);
  }

  // int32 pinNum = 7;
  if (this->_internal_pinnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_pinnum(), target);
  }

  // .PbGpioConfiguration.PbGpioCfgData.VoltageLevel initLevel = 8;
  if (this->_internal_initlevel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_initlevel(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbGpioConfiguration.PbGpioCfgData)
  return target;
}

size_t PbGpioConfiguration_PbGpioCfgData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbGpioConfiguration.PbGpioCfgData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .PbGpioConfiguration.PbGpioCfgData.Direction direction = 2;
  if (this->_internal_direction() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_direction());
  }

  // bool enabled = 3;
  if (this->_internal_enabled() != 0) {
    total_size += 1 + 1;
  }

  // .PbGpioConfiguration.PbGpioCfgData.Mode mode = 4;
  if (this->_internal_mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mode());
  }

  // int32 deviceID = 5;
  if (this->_internal_deviceid() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_deviceid());
  }

  // int32 axiChl = 6;
  if (this->_internal_axichl() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_axichl());
  }

  // int32 pinNum = 7;
  if (this->_internal_pinnum() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_pinnum());
  }

  // .PbGpioConfiguration.PbGpioCfgData.VoltageLevel initLevel = 8;
  if (this->_internal_initlevel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_initlevel());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PbGpioConfiguration_PbGpioCfgData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PbGpioConfiguration_PbGpioCfgData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PbGpioConfiguration_PbGpioCfgData::GetClassData() const { return &_class_data_; }

void PbGpioConfiguration_PbGpioCfgData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PbGpioConfiguration_PbGpioCfgData *>(to)->MergeFrom(
      static_cast<const PbGpioConfiguration_PbGpioCfgData &>(from));
}


void PbGpioConfiguration_PbGpioCfgData::MergeFrom(const PbGpioConfiguration_PbGpioCfgData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbGpioConfiguration.PbGpioCfgData)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _internal_set_name(from._internal_name());
  }
  if (from._internal_direction() != 0) {
    _internal_set_direction(from._internal_direction());
  }
  if (from._internal_enabled() != 0) {
    _internal_set_enabled(from._internal_enabled());
  }
  if (from._internal_mode() != 0) {
    _internal_set_mode(from._internal_mode());
  }
  if (from._internal_deviceid() != 0) {
    _internal_set_deviceid(from._internal_deviceid());
  }
  if (from._internal_axichl() != 0) {
    _internal_set_axichl(from._internal_axichl());
  }
  if (from._internal_pinnum() != 0) {
    _internal_set_pinnum(from._internal_pinnum());
  }
  if (from._internal_initlevel() != 0) {
    _internal_set_initlevel(from._internal_initlevel());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PbGpioConfiguration_PbGpioCfgData::CopyFrom(const PbGpioConfiguration_PbGpioCfgData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbGpioConfiguration.PbGpioCfgData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbGpioConfiguration_PbGpioCfgData::IsInitialized() const {
  return true;
}

void PbGpioConfiguration_PbGpioCfgData::InternalSwap(PbGpioConfiguration_PbGpioCfgData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &name_, lhs_arena,
      &other->name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PbGpioConfiguration_PbGpioCfgData, initlevel_)
      + sizeof(PbGpioConfiguration_PbGpioCfgData::initlevel_)
      - PROTOBUF_FIELD_OFFSET(PbGpioConfiguration_PbGpioCfgData, direction_)>(
          reinterpret_cast<char*>(&direction_),
          reinterpret_cast<char*>(&other->direction_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PbGpioConfiguration_PbGpioCfgData::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ProductHwCfg_2eproto_getter, &descriptor_table_ProductHwCfg_2eproto_once,
      file_level_metadata_ProductHwCfg_2eproto[0]);
}

// ===================================================================

class PbGpioConfiguration::_Internal {
 public:
};

PbGpioConfiguration::PbGpioConfiguration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  gpiocfglist_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:PbGpioConfiguration)
}
PbGpioConfiguration::PbGpioConfiguration(const PbGpioConfiguration& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      gpiocfglist_(from.gpiocfglist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&miobasepinnum_, &from.miobasepinnum_,
    static_cast<size_t>(reinterpret_cast<char*>(&linuxbasepinnum_) -
    reinterpret_cast<char*>(&miobasepinnum_)) + sizeof(linuxbasepinnum_));
  // @@protoc_insertion_point(copy_constructor:PbGpioConfiguration)
}

void PbGpioConfiguration::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&miobasepinnum_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&linuxbasepinnum_) -
    reinterpret_cast<char*>(&miobasepinnum_)) + sizeof(linuxbasepinnum_));
}

PbGpioConfiguration::~PbGpioConfiguration() {
  // @@protoc_insertion_point(destructor:PbGpioConfiguration)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PbGpioConfiguration::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void PbGpioConfiguration::ArenaDtor(void* object) {
  PbGpioConfiguration* _this = reinterpret_cast< PbGpioConfiguration* >(object);
  (void)_this;
}
void PbGpioConfiguration::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PbGpioConfiguration::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PbGpioConfiguration::Clear() {
// @@protoc_insertion_point(message_clear_start:PbGpioConfiguration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gpiocfglist_.Clear();
  ::memset(&miobasepinnum_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&linuxbasepinnum_) -
      reinterpret_cast<char*>(&miobasepinnum_)) + sizeof(linuxbasepinnum_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PbGpioConfiguration::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 MioBasePinNum = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          miobasepinnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 EmioBasePinNum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          emiobasepinnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 LinuxBasePinNum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          linuxbasepinnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .PbGpioConfiguration.PbGpioCfgData gpioCfgList = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_gpiocfglist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PbGpioConfiguration::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PbGpioConfiguration)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 MioBasePinNum = 1;
  if (this->_internal_miobasepinnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_miobasepinnum(), target);
  }

  // int32 EmioBasePinNum = 2;
  if (this->_internal_emiobasepinnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_emiobasepinnum(), target);
  }

  // int32 LinuxBasePinNum = 3;
  if (this->_internal_linuxbasepinnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_linuxbasepinnum(), target);
  }

  // repeated .PbGpioConfiguration.PbGpioCfgData gpioCfgList = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_gpiocfglist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_gpiocfglist(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PbGpioConfiguration)
  return target;
}

size_t PbGpioConfiguration::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PbGpioConfiguration)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PbGpioConfiguration.PbGpioCfgData gpioCfgList = 4;
  total_size += 1UL * this->_internal_gpiocfglist_size();
  for (const auto& msg : this->gpiocfglist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 MioBasePinNum = 1;
  if (this->_internal_miobasepinnum() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_miobasepinnum());
  }

  // int32 EmioBasePinNum = 2;
  if (this->_internal_emiobasepinnum() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_emiobasepinnum());
  }

  // int32 LinuxBasePinNum = 3;
  if (this->_internal_linuxbasepinnum() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_linuxbasepinnum());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PbGpioConfiguration::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PbGpioConfiguration::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PbGpioConfiguration::GetClassData() const { return &_class_data_; }

void PbGpioConfiguration::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PbGpioConfiguration *>(to)->MergeFrom(
      static_cast<const PbGpioConfiguration &>(from));
}


void PbGpioConfiguration::MergeFrom(const PbGpioConfiguration& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PbGpioConfiguration)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gpiocfglist_.MergeFrom(from.gpiocfglist_);
  if (from._internal_miobasepinnum() != 0) {
    _internal_set_miobasepinnum(from._internal_miobasepinnum());
  }
  if (from._internal_emiobasepinnum() != 0) {
    _internal_set_emiobasepinnum(from._internal_emiobasepinnum());
  }
  if (from._internal_linuxbasepinnum() != 0) {
    _internal_set_linuxbasepinnum(from._internal_linuxbasepinnum());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PbGpioConfiguration::CopyFrom(const PbGpioConfiguration& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PbGpioConfiguration)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PbGpioConfiguration::IsInitialized() const {
  return true;
}

void PbGpioConfiguration::InternalSwap(PbGpioConfiguration* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  gpiocfglist_.InternalSwap(&other->gpiocfglist_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PbGpioConfiguration, linuxbasepinnum_)
      + sizeof(PbGpioConfiguration::linuxbasepinnum_)
      - PROTOBUF_FIELD_OFFSET(PbGpioConfiguration, miobasepinnum_)>(
          reinterpret_cast<char*>(&miobasepinnum_),
          reinterpret_cast<char*>(&other->miobasepinnum_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PbGpioConfiguration::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ProductHwCfg_2eproto_getter, &descriptor_table_ProductHwCfg_2eproto_once,
      file_level_metadata_ProductHwCfg_2eproto[1]);
}

// ===================================================================

class ProductHwCfg::_Internal {
 public:
  static const ::PbGpioConfiguration& gpioconfig(const ProductHwCfg* msg);
};

const ::PbGpioConfiguration&
ProductHwCfg::_Internal::gpioconfig(const ProductHwCfg* msg) {
  return *msg->gpioconfig_;
}
ProductHwCfg::ProductHwCfg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ProductHwCfg)
}
ProductHwCfg::ProductHwCfg(const ProductHwCfg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  producthwtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_producthwtype().empty()) {
    producthwtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_producthwtype(), 
      GetArenaForAllocation());
  }
  desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_desc().empty()) {
    desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_desc(), 
      GetArenaForAllocation());
  }
  devttytypec_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devttytypec().empty()) {
    devttytypec_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devttytypec(), 
      GetArenaForAllocation());
  }
  devttymcu2ps_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devttymcu2ps().empty()) {
    devttymcu2ps_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devttymcu2ps(), 
      GetArenaForAllocation());
  }
  devttywifibluetooth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_devttywifibluetooth().empty()) {
    devttywifibluetooth_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_devttywifibluetooth(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_gpioconfig()) {
    gpioconfig_ = new ::PbGpioConfiguration(*from.gpioconfig_);
  } else {
    gpioconfig_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ProductHwCfg)
}

void ProductHwCfg::SharedCtor() {
producthwtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
desc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
devttytypec_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
devttymcu2ps_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
devttywifibluetooth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
gpioconfig_ = nullptr;
}

ProductHwCfg::~ProductHwCfg() {
  // @@protoc_insertion_point(destructor:ProductHwCfg)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ProductHwCfg::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  producthwtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  desc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  devttytypec_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  devttymcu2ps_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  devttywifibluetooth_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete gpioconfig_;
}

void ProductHwCfg::ArenaDtor(void* object) {
  ProductHwCfg* _this = reinterpret_cast< ProductHwCfg* >(object);
  (void)_this;
}
void ProductHwCfg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProductHwCfg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ProductHwCfg::Clear() {
// @@protoc_insertion_point(message_clear_start:ProductHwCfg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  producthwtype_.ClearToEmpty();
  desc_.ClearToEmpty();
  devttytypec_.ClearToEmpty();
  devttymcu2ps_.ClearToEmpty();
  devttywifibluetooth_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && gpioconfig_ != nullptr) {
    delete gpioconfig_;
  }
  gpioconfig_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProductHwCfg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string productHwType = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_producthwtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProductHwCfg.productHwType"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string desc = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_desc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProductHwCfg.desc"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string devTtyTypec = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_devttytypec();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProductHwCfg.devTtyTypec"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string devTtyMcu2Ps = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_devttymcu2ps();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProductHwCfg.devTtyMcu2Ps"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string devTtyWifiBluetooth = 102;
      case 102:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_devttywifibluetooth();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProductHwCfg.devTtyWifiBluetooth"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .PbGpioConfiguration gpioConfig = 200;
      case 200:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_gpioconfig(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProductHwCfg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProductHwCfg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string productHwType = 1;
  if (!this->_internal_producthwtype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_producthwtype().data(), static_cast<int>(this->_internal_producthwtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProductHwCfg.productHwType");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_producthwtype(), target);
  }

  // string desc = 2;
  if (!this->_internal_desc().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_desc().data(), static_cast<int>(this->_internal_desc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProductHwCfg.desc");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_desc(), target);
  }

  // string devTtyTypec = 100;
  if (!this->_internal_devttytypec().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devttytypec().data(), static_cast<int>(this->_internal_devttytypec().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProductHwCfg.devTtyTypec");
    target = stream->WriteStringMaybeAliased(
        100, this->_internal_devttytypec(), target);
  }

  // string devTtyMcu2Ps = 101;
  if (!this->_internal_devttymcu2ps().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devttymcu2ps().data(), static_cast<int>(this->_internal_devttymcu2ps().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProductHwCfg.devTtyMcu2Ps");
    target = stream->WriteStringMaybeAliased(
        101, this->_internal_devttymcu2ps(), target);
  }

  // string devTtyWifiBluetooth = 102;
  if (!this->_internal_devttywifibluetooth().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_devttywifibluetooth().data(), static_cast<int>(this->_internal_devttywifibluetooth().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProductHwCfg.devTtyWifiBluetooth");
    target = stream->WriteStringMaybeAliased(
        102, this->_internal_devttywifibluetooth(), target);
  }

  // .PbGpioConfiguration gpioConfig = 200;
  if (this->_internal_has_gpioconfig()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        200, _Internal::gpioconfig(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProductHwCfg)
  return target;
}

size_t ProductHwCfg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProductHwCfg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string productHwType = 1;
  if (!this->_internal_producthwtype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_producthwtype());
  }

  // string desc = 2;
  if (!this->_internal_desc().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_desc());
  }

  // string devTtyTypec = 100;
  if (!this->_internal_devttytypec().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devttytypec());
  }

  // string devTtyMcu2Ps = 101;
  if (!this->_internal_devttymcu2ps().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devttymcu2ps());
  }

  // string devTtyWifiBluetooth = 102;
  if (!this->_internal_devttywifibluetooth().empty()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_devttywifibluetooth());
  }

  // .PbGpioConfiguration gpioConfig = 200;
  if (this->_internal_has_gpioconfig()) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *gpioconfig_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProductHwCfg::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ProductHwCfg::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProductHwCfg::GetClassData() const { return &_class_data_; }

void ProductHwCfg::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ProductHwCfg *>(to)->MergeFrom(
      static_cast<const ProductHwCfg &>(from));
}


void ProductHwCfg::MergeFrom(const ProductHwCfg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProductHwCfg)
  GOOGLE_DCHECK_NE(&from, this);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_producthwtype().empty()) {
    _internal_set_producthwtype(from._internal_producthwtype());
  }
  if (!from._internal_desc().empty()) {
    _internal_set_desc(from._internal_desc());
  }
  if (!from._internal_devttytypec().empty()) {
    _internal_set_devttytypec(from._internal_devttytypec());
  }
  if (!from._internal_devttymcu2ps().empty()) {
    _internal_set_devttymcu2ps(from._internal_devttymcu2ps());
  }
  if (!from._internal_devttywifibluetooth().empty()) {
    _internal_set_devttywifibluetooth(from._internal_devttywifibluetooth());
  }
  if (from._internal_has_gpioconfig()) {
    _internal_mutable_gpioconfig()->::PbGpioConfiguration::MergeFrom(from._internal_gpioconfig());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProductHwCfg::CopyFrom(const ProductHwCfg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProductHwCfg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProductHwCfg::IsInitialized() const {
  return true;
}

void ProductHwCfg::InternalSwap(ProductHwCfg* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &producthwtype_, lhs_arena,
      &other->producthwtype_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &desc_, lhs_arena,
      &other->desc_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &devttytypec_, lhs_arena,
      &other->devttytypec_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &devttymcu2ps_, lhs_arena,
      &other->devttymcu2ps_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &devttywifibluetooth_, lhs_arena,
      &other->devttywifibluetooth_, rhs_arena
  );
  swap(gpioconfig_, other->gpioconfig_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProductHwCfg::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ProductHwCfg_2eproto_getter, &descriptor_table_ProductHwCfg_2eproto_once,
      file_level_metadata_ProductHwCfg_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PbGpioConfiguration_PbGpioCfgData* Arena::CreateMaybeMessage< ::PbGpioConfiguration_PbGpioCfgData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PbGpioConfiguration_PbGpioCfgData >(arena);
}
template<> PROTOBUF_NOINLINE ::PbGpioConfiguration* Arena::CreateMaybeMessage< ::PbGpioConfiguration >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PbGpioConfiguration >(arena);
}
template<> PROTOBUF_NOINLINE ::ProductHwCfg* Arena::CreateMaybeMessage< ::ProductHwCfg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProductHwCfg >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
