// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProductHwCfg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ProductHwCfg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ProductHwCfg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3018000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3018000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ProductHwCfg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ProductHwCfg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ProductHwCfg_2eproto;
class PbGpioConfiguration;
struct PbGpioConfigurationDefaultTypeInternal;
extern PbGpioConfigurationDefaultTypeInternal _PbGpioConfiguration_default_instance_;
class PbGpioConfiguration_PbGpioCfgData;
struct PbGpioConfiguration_PbGpioCfgDataDefaultTypeInternal;
extern PbGpioConfiguration_PbGpioCfgDataDefaultTypeInternal _PbGpioConfiguration_PbGpioCfgData_default_instance_;
class ProductHwCfg;
struct ProductHwCfgDefaultTypeInternal;
extern ProductHwCfgDefaultTypeInternal _ProductHwCfg_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::PbGpioConfiguration* Arena::CreateMaybeMessage<::PbGpioConfiguration>(Arena*);
template<> ::PbGpioConfiguration_PbGpioCfgData* Arena::CreateMaybeMessage<::PbGpioConfiguration_PbGpioCfgData>(Arena*);
template<> ::ProductHwCfg* Arena::CreateMaybeMessage<::ProductHwCfg>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

enum PbGpioConfiguration_PbGpioCfgData_Direction : int {
  PbGpioConfiguration_PbGpioCfgData_Direction_DIR_INPUT = 0,
  PbGpioConfiguration_PbGpioCfgData_Direction_DIR_OUTPUT = 1,
  PbGpioConfiguration_PbGpioCfgData_Direction_PbGpioConfiguration_PbGpioCfgData_Direction_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  PbGpioConfiguration_PbGpioCfgData_Direction_PbGpioConfiguration_PbGpioCfgData_Direction_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool PbGpioConfiguration_PbGpioCfgData_Direction_IsValid(int value);
constexpr PbGpioConfiguration_PbGpioCfgData_Direction PbGpioConfiguration_PbGpioCfgData_Direction_Direction_MIN = PbGpioConfiguration_PbGpioCfgData_Direction_DIR_INPUT;
constexpr PbGpioConfiguration_PbGpioCfgData_Direction PbGpioConfiguration_PbGpioCfgData_Direction_Direction_MAX = PbGpioConfiguration_PbGpioCfgData_Direction_DIR_OUTPUT;
constexpr int PbGpioConfiguration_PbGpioCfgData_Direction_Direction_ARRAYSIZE = PbGpioConfiguration_PbGpioCfgData_Direction_Direction_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PbGpioConfiguration_PbGpioCfgData_Direction_descriptor();
template<typename T>
inline const std::string& PbGpioConfiguration_PbGpioCfgData_Direction_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PbGpioConfiguration_PbGpioCfgData_Direction>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PbGpioConfiguration_PbGpioCfgData_Direction_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PbGpioConfiguration_PbGpioCfgData_Direction_descriptor(), enum_t_value);
}
inline bool PbGpioConfiguration_PbGpioCfgData_Direction_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PbGpioConfiguration_PbGpioCfgData_Direction* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PbGpioConfiguration_PbGpioCfgData_Direction>(
    PbGpioConfiguration_PbGpioCfgData_Direction_descriptor(), name, value);
}
enum PbGpioConfiguration_PbGpioCfgData_Mode : int {
  PbGpioConfiguration_PbGpioCfgData_Mode_MODE_MIO = 0,
  PbGpioConfiguration_PbGpioCfgData_Mode_MODE_EMIO = 1,
  PbGpioConfiguration_PbGpioCfgData_Mode_MODE_AXI_GPIO = 2,
  PbGpioConfiguration_PbGpioCfgData_Mode_MODE_AXI_BRAM = 3,
  PbGpioConfiguration_PbGpioCfgData_Mode_MODE_GPIO_MODE_MAX = 255,
  PbGpioConfiguration_PbGpioCfgData_Mode_PbGpioConfiguration_PbGpioCfgData_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  PbGpioConfiguration_PbGpioCfgData_Mode_PbGpioConfiguration_PbGpioCfgData_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool PbGpioConfiguration_PbGpioCfgData_Mode_IsValid(int value);
constexpr PbGpioConfiguration_PbGpioCfgData_Mode PbGpioConfiguration_PbGpioCfgData_Mode_Mode_MIN = PbGpioConfiguration_PbGpioCfgData_Mode_MODE_MIO;
constexpr PbGpioConfiguration_PbGpioCfgData_Mode PbGpioConfiguration_PbGpioCfgData_Mode_Mode_MAX = PbGpioConfiguration_PbGpioCfgData_Mode_MODE_GPIO_MODE_MAX;
constexpr int PbGpioConfiguration_PbGpioCfgData_Mode_Mode_ARRAYSIZE = PbGpioConfiguration_PbGpioCfgData_Mode_Mode_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PbGpioConfiguration_PbGpioCfgData_Mode_descriptor();
template<typename T>
inline const std::string& PbGpioConfiguration_PbGpioCfgData_Mode_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PbGpioConfiguration_PbGpioCfgData_Mode>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PbGpioConfiguration_PbGpioCfgData_Mode_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PbGpioConfiguration_PbGpioCfgData_Mode_descriptor(), enum_t_value);
}
inline bool PbGpioConfiguration_PbGpioCfgData_Mode_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PbGpioConfiguration_PbGpioCfgData_Mode* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PbGpioConfiguration_PbGpioCfgData_Mode>(
    PbGpioConfiguration_PbGpioCfgData_Mode_descriptor(), name, value);
}
enum PbGpioConfiguration_PbGpioCfgData_VoltageLevel : int {
  PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VOL_LOW = 0,
  PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VOL_HIGH = 1,
  PbGpioConfiguration_PbGpioCfgData_VoltageLevel_PbGpioConfiguration_PbGpioCfgData_VoltageLevel_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  PbGpioConfiguration_PbGpioCfgData_VoltageLevel_PbGpioConfiguration_PbGpioCfgData_VoltageLevel_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool PbGpioConfiguration_PbGpioCfgData_VoltageLevel_IsValid(int value);
constexpr PbGpioConfiguration_PbGpioCfgData_VoltageLevel PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VoltageLevel_MIN = PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VOL_LOW;
constexpr PbGpioConfiguration_PbGpioCfgData_VoltageLevel PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VoltageLevel_MAX = PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VOL_HIGH;
constexpr int PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VoltageLevel_ARRAYSIZE = PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VoltageLevel_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PbGpioConfiguration_PbGpioCfgData_VoltageLevel_descriptor();
template<typename T>
inline const std::string& PbGpioConfiguration_PbGpioCfgData_VoltageLevel_Name(T enum_t_value) {
  static_assert(::std::is_same<T, PbGpioConfiguration_PbGpioCfgData_VoltageLevel>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function PbGpioConfiguration_PbGpioCfgData_VoltageLevel_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    PbGpioConfiguration_PbGpioCfgData_VoltageLevel_descriptor(), enum_t_value);
}
inline bool PbGpioConfiguration_PbGpioCfgData_VoltageLevel_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, PbGpioConfiguration_PbGpioCfgData_VoltageLevel* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<PbGpioConfiguration_PbGpioCfgData_VoltageLevel>(
    PbGpioConfiguration_PbGpioCfgData_VoltageLevel_descriptor(), name, value);
}
// ===================================================================

class PbGpioConfiguration_PbGpioCfgData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PbGpioConfiguration.PbGpioCfgData) */ {
 public:
  inline PbGpioConfiguration_PbGpioCfgData() : PbGpioConfiguration_PbGpioCfgData(nullptr) {}
  ~PbGpioConfiguration_PbGpioCfgData() override;
  explicit constexpr PbGpioConfiguration_PbGpioCfgData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PbGpioConfiguration_PbGpioCfgData(const PbGpioConfiguration_PbGpioCfgData& from);
  PbGpioConfiguration_PbGpioCfgData(PbGpioConfiguration_PbGpioCfgData&& from) noexcept
    : PbGpioConfiguration_PbGpioCfgData() {
    *this = ::std::move(from);
  }

  inline PbGpioConfiguration_PbGpioCfgData& operator=(const PbGpioConfiguration_PbGpioCfgData& from) {
    CopyFrom(from);
    return *this;
  }
  inline PbGpioConfiguration_PbGpioCfgData& operator=(PbGpioConfiguration_PbGpioCfgData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PbGpioConfiguration_PbGpioCfgData& default_instance() {
    return *internal_default_instance();
  }
  static inline const PbGpioConfiguration_PbGpioCfgData* internal_default_instance() {
    return reinterpret_cast<const PbGpioConfiguration_PbGpioCfgData*>(
               &_PbGpioConfiguration_PbGpioCfgData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PbGpioConfiguration_PbGpioCfgData& a, PbGpioConfiguration_PbGpioCfgData& b) {
    a.Swap(&b);
  }
  inline void Swap(PbGpioConfiguration_PbGpioCfgData* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PbGpioConfiguration_PbGpioCfgData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PbGpioConfiguration_PbGpioCfgData* New() const final {
    return new PbGpioConfiguration_PbGpioCfgData();
  }

  PbGpioConfiguration_PbGpioCfgData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PbGpioConfiguration_PbGpioCfgData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PbGpioConfiguration_PbGpioCfgData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PbGpioConfiguration_PbGpioCfgData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PbGpioConfiguration_PbGpioCfgData* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PbGpioConfiguration.PbGpioCfgData";
  }
  protected:
  explicit PbGpioConfiguration_PbGpioCfgData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PbGpioConfiguration_PbGpioCfgData_Direction Direction;
  static constexpr Direction DIR_INPUT =
    PbGpioConfiguration_PbGpioCfgData_Direction_DIR_INPUT;
  static constexpr Direction DIR_OUTPUT =
    PbGpioConfiguration_PbGpioCfgData_Direction_DIR_OUTPUT;
  static inline bool Direction_IsValid(int value) {
    return PbGpioConfiguration_PbGpioCfgData_Direction_IsValid(value);
  }
  static constexpr Direction Direction_MIN =
    PbGpioConfiguration_PbGpioCfgData_Direction_Direction_MIN;
  static constexpr Direction Direction_MAX =
    PbGpioConfiguration_PbGpioCfgData_Direction_Direction_MAX;
  static constexpr int Direction_ARRAYSIZE =
    PbGpioConfiguration_PbGpioCfgData_Direction_Direction_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Direction_descriptor() {
    return PbGpioConfiguration_PbGpioCfgData_Direction_descriptor();
  }
  template<typename T>
  static inline const std::string& Direction_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Direction>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Direction_Name.");
    return PbGpioConfiguration_PbGpioCfgData_Direction_Name(enum_t_value);
  }
  static inline bool Direction_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Direction* value) {
    return PbGpioConfiguration_PbGpioCfgData_Direction_Parse(name, value);
  }

  typedef PbGpioConfiguration_PbGpioCfgData_Mode Mode;
  static constexpr Mode MODE_MIO =
    PbGpioConfiguration_PbGpioCfgData_Mode_MODE_MIO;
  static constexpr Mode MODE_EMIO =
    PbGpioConfiguration_PbGpioCfgData_Mode_MODE_EMIO;
  static constexpr Mode MODE_AXI_GPIO =
    PbGpioConfiguration_PbGpioCfgData_Mode_MODE_AXI_GPIO;
  static constexpr Mode MODE_AXI_BRAM =
    PbGpioConfiguration_PbGpioCfgData_Mode_MODE_AXI_BRAM;
  static constexpr Mode MODE_GPIO_MODE_MAX =
    PbGpioConfiguration_PbGpioCfgData_Mode_MODE_GPIO_MODE_MAX;
  static inline bool Mode_IsValid(int value) {
    return PbGpioConfiguration_PbGpioCfgData_Mode_IsValid(value);
  }
  static constexpr Mode Mode_MIN =
    PbGpioConfiguration_PbGpioCfgData_Mode_Mode_MIN;
  static constexpr Mode Mode_MAX =
    PbGpioConfiguration_PbGpioCfgData_Mode_Mode_MAX;
  static constexpr int Mode_ARRAYSIZE =
    PbGpioConfiguration_PbGpioCfgData_Mode_Mode_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Mode_descriptor() {
    return PbGpioConfiguration_PbGpioCfgData_Mode_descriptor();
  }
  template<typename T>
  static inline const std::string& Mode_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Mode>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Mode_Name.");
    return PbGpioConfiguration_PbGpioCfgData_Mode_Name(enum_t_value);
  }
  static inline bool Mode_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Mode* value) {
    return PbGpioConfiguration_PbGpioCfgData_Mode_Parse(name, value);
  }

  typedef PbGpioConfiguration_PbGpioCfgData_VoltageLevel VoltageLevel;
  static constexpr VoltageLevel VOL_LOW =
    PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VOL_LOW;
  static constexpr VoltageLevel VOL_HIGH =
    PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VOL_HIGH;
  static inline bool VoltageLevel_IsValid(int value) {
    return PbGpioConfiguration_PbGpioCfgData_VoltageLevel_IsValid(value);
  }
  static constexpr VoltageLevel VoltageLevel_MIN =
    PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VoltageLevel_MIN;
  static constexpr VoltageLevel VoltageLevel_MAX =
    PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VoltageLevel_MAX;
  static constexpr int VoltageLevel_ARRAYSIZE =
    PbGpioConfiguration_PbGpioCfgData_VoltageLevel_VoltageLevel_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  VoltageLevel_descriptor() {
    return PbGpioConfiguration_PbGpioCfgData_VoltageLevel_descriptor();
  }
  template<typename T>
  static inline const std::string& VoltageLevel_Name(T enum_t_value) {
    static_assert(::std::is_same<T, VoltageLevel>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function VoltageLevel_Name.");
    return PbGpioConfiguration_PbGpioCfgData_VoltageLevel_Name(enum_t_value);
  }
  static inline bool VoltageLevel_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      VoltageLevel* value) {
    return PbGpioConfiguration_PbGpioCfgData_VoltageLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kDirectionFieldNumber = 2,
    kEnabledFieldNumber = 3,
    kModeFieldNumber = 4,
    kDeviceIDFieldNumber = 5,
    kAxiChlFieldNumber = 6,
    kPinNumFieldNumber = 7,
    kInitLevelFieldNumber = 8,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_name();
  PROTOBUF_MUST_USE_RESULT std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .PbGpioConfiguration.PbGpioCfgData.Direction direction = 2;
  void clear_direction();
  ::PbGpioConfiguration_PbGpioCfgData_Direction direction() const;
  void set_direction(::PbGpioConfiguration_PbGpioCfgData_Direction value);
  private:
  ::PbGpioConfiguration_PbGpioCfgData_Direction _internal_direction() const;
  void _internal_set_direction(::PbGpioConfiguration_PbGpioCfgData_Direction value);
  public:

  // bool enabled = 3;
  void clear_enabled();
  bool enabled() const;
  void set_enabled(bool value);
  private:
  bool _internal_enabled() const;
  void _internal_set_enabled(bool value);
  public:

  // .PbGpioConfiguration.PbGpioCfgData.Mode mode = 4;
  void clear_mode();
  ::PbGpioConfiguration_PbGpioCfgData_Mode mode() const;
  void set_mode(::PbGpioConfiguration_PbGpioCfgData_Mode value);
  private:
  ::PbGpioConfiguration_PbGpioCfgData_Mode _internal_mode() const;
  void _internal_set_mode(::PbGpioConfiguration_PbGpioCfgData_Mode value);
  public:

  // int32 deviceID = 5;
  void clear_deviceid();
  ::PROTOBUF_NAMESPACE_ID::int32 deviceid() const;
  void set_deviceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_deviceid() const;
  void _internal_set_deviceid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 axiChl = 6;
  void clear_axichl();
  ::PROTOBUF_NAMESPACE_ID::int32 axichl() const;
  void set_axichl(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_axichl() const;
  void _internal_set_axichl(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 pinNum = 7;
  void clear_pinnum();
  ::PROTOBUF_NAMESPACE_ID::int32 pinnum() const;
  void set_pinnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_pinnum() const;
  void _internal_set_pinnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // .PbGpioConfiguration.PbGpioCfgData.VoltageLevel initLevel = 8;
  void clear_initlevel();
  ::PbGpioConfiguration_PbGpioCfgData_VoltageLevel initlevel() const;
  void set_initlevel(::PbGpioConfiguration_PbGpioCfgData_VoltageLevel value);
  private:
  ::PbGpioConfiguration_PbGpioCfgData_VoltageLevel _internal_initlevel() const;
  void _internal_set_initlevel(::PbGpioConfiguration_PbGpioCfgData_VoltageLevel value);
  public:

  // @@protoc_insertion_point(class_scope:PbGpioConfiguration.PbGpioCfgData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  int direction_;
  bool enabled_;
  int mode_;
  ::PROTOBUF_NAMESPACE_ID::int32 deviceid_;
  ::PROTOBUF_NAMESPACE_ID::int32 axichl_;
  ::PROTOBUF_NAMESPACE_ID::int32 pinnum_;
  int initlevel_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProductHwCfg_2eproto;
};
// -------------------------------------------------------------------

class PbGpioConfiguration final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:PbGpioConfiguration) */ {
 public:
  inline PbGpioConfiguration() : PbGpioConfiguration(nullptr) {}
  ~PbGpioConfiguration() override;
  explicit constexpr PbGpioConfiguration(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  PbGpioConfiguration(const PbGpioConfiguration& from);
  PbGpioConfiguration(PbGpioConfiguration&& from) noexcept
    : PbGpioConfiguration() {
    *this = ::std::move(from);
  }

  inline PbGpioConfiguration& operator=(const PbGpioConfiguration& from) {
    CopyFrom(from);
    return *this;
  }
  inline PbGpioConfiguration& operator=(PbGpioConfiguration&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PbGpioConfiguration& default_instance() {
    return *internal_default_instance();
  }
  static inline const PbGpioConfiguration* internal_default_instance() {
    return reinterpret_cast<const PbGpioConfiguration*>(
               &_PbGpioConfiguration_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PbGpioConfiguration& a, PbGpioConfiguration& b) {
    a.Swap(&b);
  }
  inline void Swap(PbGpioConfiguration* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PbGpioConfiguration* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PbGpioConfiguration* New() const final {
    return new PbGpioConfiguration();
  }

  PbGpioConfiguration* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PbGpioConfiguration>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const PbGpioConfiguration& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const PbGpioConfiguration& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PbGpioConfiguration* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "PbGpioConfiguration";
  }
  protected:
  explicit PbGpioConfiguration(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef PbGpioConfiguration_PbGpioCfgData PbGpioCfgData;

  // accessors -------------------------------------------------------

  enum : int {
    kGpioCfgListFieldNumber = 4,
    kMioBasePinNumFieldNumber = 1,
    kEmioBasePinNumFieldNumber = 2,
    kLinuxBasePinNumFieldNumber = 3,
  };
  // repeated .PbGpioConfiguration.PbGpioCfgData gpioCfgList = 4;
  int gpiocfglist_size() const;
  private:
  int _internal_gpiocfglist_size() const;
  public:
  void clear_gpiocfglist();
  ::PbGpioConfiguration_PbGpioCfgData* mutable_gpiocfglist(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PbGpioConfiguration_PbGpioCfgData >*
      mutable_gpiocfglist();
  private:
  const ::PbGpioConfiguration_PbGpioCfgData& _internal_gpiocfglist(int index) const;
  ::PbGpioConfiguration_PbGpioCfgData* _internal_add_gpiocfglist();
  public:
  const ::PbGpioConfiguration_PbGpioCfgData& gpiocfglist(int index) const;
  ::PbGpioConfiguration_PbGpioCfgData* add_gpiocfglist();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PbGpioConfiguration_PbGpioCfgData >&
      gpiocfglist() const;

  // int32 MioBasePinNum = 1;
  void clear_miobasepinnum();
  ::PROTOBUF_NAMESPACE_ID::int32 miobasepinnum() const;
  void set_miobasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_miobasepinnum() const;
  void _internal_set_miobasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 EmioBasePinNum = 2;
  void clear_emiobasepinnum();
  ::PROTOBUF_NAMESPACE_ID::int32 emiobasepinnum() const;
  void set_emiobasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_emiobasepinnum() const;
  void _internal_set_emiobasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 LinuxBasePinNum = 3;
  void clear_linuxbasepinnum();
  ::PROTOBUF_NAMESPACE_ID::int32 linuxbasepinnum() const;
  void set_linuxbasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_linuxbasepinnum() const;
  void _internal_set_linuxbasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:PbGpioConfiguration)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PbGpioConfiguration_PbGpioCfgData > gpiocfglist_;
  ::PROTOBUF_NAMESPACE_ID::int32 miobasepinnum_;
  ::PROTOBUF_NAMESPACE_ID::int32 emiobasepinnum_;
  ::PROTOBUF_NAMESPACE_ID::int32 linuxbasepinnum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProductHwCfg_2eproto;
};
// -------------------------------------------------------------------

class ProductHwCfg final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProductHwCfg) */ {
 public:
  inline ProductHwCfg() : ProductHwCfg(nullptr) {}
  ~ProductHwCfg() override;
  explicit constexpr ProductHwCfg(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProductHwCfg(const ProductHwCfg& from);
  ProductHwCfg(ProductHwCfg&& from) noexcept
    : ProductHwCfg() {
    *this = ::std::move(from);
  }

  inline ProductHwCfg& operator=(const ProductHwCfg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProductHwCfg& operator=(ProductHwCfg&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProductHwCfg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProductHwCfg* internal_default_instance() {
    return reinterpret_cast<const ProductHwCfg*>(
               &_ProductHwCfg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ProductHwCfg& a, ProductHwCfg& b) {
    a.Swap(&b);
  }
  inline void Swap(ProductHwCfg* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProductHwCfg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProductHwCfg* New() const final {
    return new ProductHwCfg();
  }

  ProductHwCfg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProductHwCfg>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ProductHwCfg& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ProductHwCfg& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProductHwCfg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProductHwCfg";
  }
  protected:
  explicit ProductHwCfg(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProductHwTypeFieldNumber = 1,
    kDescFieldNumber = 2,
    kDevTtyTypecFieldNumber = 100,
    kDevTtyMcu2PsFieldNumber = 101,
    kDevTtyWifiBluetoothFieldNumber = 102,
    kGpioConfigFieldNumber = 200,
  };
  // string productHwType = 1;
  void clear_producthwtype();
  const std::string& producthwtype() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_producthwtype(ArgT0&& arg0, ArgT... args);
  std::string* mutable_producthwtype();
  PROTOBUF_MUST_USE_RESULT std::string* release_producthwtype();
  void set_allocated_producthwtype(std::string* producthwtype);
  private:
  const std::string& _internal_producthwtype() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_producthwtype(const std::string& value);
  std::string* _internal_mutable_producthwtype();
  public:

  // string desc = 2;
  void clear_desc();
  const std::string& desc() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_desc(ArgT0&& arg0, ArgT... args);
  std::string* mutable_desc();
  PROTOBUF_MUST_USE_RESULT std::string* release_desc();
  void set_allocated_desc(std::string* desc);
  private:
  const std::string& _internal_desc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_desc(const std::string& value);
  std::string* _internal_mutable_desc();
  public:

  // string devTtyTypec = 100;
  void clear_devttytypec();
  const std::string& devttytypec() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_devttytypec(ArgT0&& arg0, ArgT... args);
  std::string* mutable_devttytypec();
  PROTOBUF_MUST_USE_RESULT std::string* release_devttytypec();
  void set_allocated_devttytypec(std::string* devttytypec);
  private:
  const std::string& _internal_devttytypec() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_devttytypec(const std::string& value);
  std::string* _internal_mutable_devttytypec();
  public:

  // string devTtyMcu2Ps = 101;
  void clear_devttymcu2ps();
  const std::string& devttymcu2ps() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_devttymcu2ps(ArgT0&& arg0, ArgT... args);
  std::string* mutable_devttymcu2ps();
  PROTOBUF_MUST_USE_RESULT std::string* release_devttymcu2ps();
  void set_allocated_devttymcu2ps(std::string* devttymcu2ps);
  private:
  const std::string& _internal_devttymcu2ps() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_devttymcu2ps(const std::string& value);
  std::string* _internal_mutable_devttymcu2ps();
  public:

  // string devTtyWifiBluetooth = 102;
  void clear_devttywifibluetooth();
  const std::string& devttywifibluetooth() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_devttywifibluetooth(ArgT0&& arg0, ArgT... args);
  std::string* mutable_devttywifibluetooth();
  PROTOBUF_MUST_USE_RESULT std::string* release_devttywifibluetooth();
  void set_allocated_devttywifibluetooth(std::string* devttywifibluetooth);
  private:
  const std::string& _internal_devttywifibluetooth() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_devttywifibluetooth(const std::string& value);
  std::string* _internal_mutable_devttywifibluetooth();
  public:

  // .PbGpioConfiguration gpioConfig = 200;
  bool has_gpioconfig() const;
  private:
  bool _internal_has_gpioconfig() const;
  public:
  void clear_gpioconfig();
  const ::PbGpioConfiguration& gpioconfig() const;
  PROTOBUF_MUST_USE_RESULT ::PbGpioConfiguration* release_gpioconfig();
  ::PbGpioConfiguration* mutable_gpioconfig();
  void set_allocated_gpioconfig(::PbGpioConfiguration* gpioconfig);
  private:
  const ::PbGpioConfiguration& _internal_gpioconfig() const;
  ::PbGpioConfiguration* _internal_mutable_gpioconfig();
  public:
  void unsafe_arena_set_allocated_gpioconfig(
      ::PbGpioConfiguration* gpioconfig);
  ::PbGpioConfiguration* unsafe_arena_release_gpioconfig();

  // @@protoc_insertion_point(class_scope:ProductHwCfg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr producthwtype_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr desc_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr devttytypec_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr devttymcu2ps_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr devttywifibluetooth_;
  ::PbGpioConfiguration* gpioconfig_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ProductHwCfg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PbGpioConfiguration_PbGpioCfgData

// string name = 1;
inline void PbGpioConfiguration_PbGpioCfgData::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& PbGpioConfiguration_PbGpioCfgData::name() const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.PbGpioCfgData.name)
  return _internal_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void PbGpioConfiguration_PbGpioCfgData::set_name(ArgT0&& arg0, ArgT... args) {
 
 name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:PbGpioConfiguration.PbGpioCfgData.name)
}
inline std::string* PbGpioConfiguration_PbGpioCfgData::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:PbGpioConfiguration.PbGpioCfgData.name)
  return _s;
}
inline const std::string& PbGpioConfiguration_PbGpioCfgData::_internal_name() const {
  return name_.Get();
}
inline void PbGpioConfiguration_PbGpioCfgData::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* PbGpioConfiguration_PbGpioCfgData::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* PbGpioConfiguration_PbGpioCfgData::release_name() {
  // @@protoc_insertion_point(field_release:PbGpioConfiguration.PbGpioCfgData.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void PbGpioConfiguration_PbGpioCfgData::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:PbGpioConfiguration.PbGpioCfgData.name)
}

// .PbGpioConfiguration.PbGpioCfgData.Direction direction = 2;
inline void PbGpioConfiguration_PbGpioCfgData::clear_direction() {
  direction_ = 0;
}
inline ::PbGpioConfiguration_PbGpioCfgData_Direction PbGpioConfiguration_PbGpioCfgData::_internal_direction() const {
  return static_cast< ::PbGpioConfiguration_PbGpioCfgData_Direction >(direction_);
}
inline ::PbGpioConfiguration_PbGpioCfgData_Direction PbGpioConfiguration_PbGpioCfgData::direction() const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.PbGpioCfgData.direction)
  return _internal_direction();
}
inline void PbGpioConfiguration_PbGpioCfgData::_internal_set_direction(::PbGpioConfiguration_PbGpioCfgData_Direction value) {
  
  direction_ = value;
}
inline void PbGpioConfiguration_PbGpioCfgData::set_direction(::PbGpioConfiguration_PbGpioCfgData_Direction value) {
  _internal_set_direction(value);
  // @@protoc_insertion_point(field_set:PbGpioConfiguration.PbGpioCfgData.direction)
}

// bool enabled = 3;
inline void PbGpioConfiguration_PbGpioCfgData::clear_enabled() {
  enabled_ = false;
}
inline bool PbGpioConfiguration_PbGpioCfgData::_internal_enabled() const {
  return enabled_;
}
inline bool PbGpioConfiguration_PbGpioCfgData::enabled() const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.PbGpioCfgData.enabled)
  return _internal_enabled();
}
inline void PbGpioConfiguration_PbGpioCfgData::_internal_set_enabled(bool value) {
  
  enabled_ = value;
}
inline void PbGpioConfiguration_PbGpioCfgData::set_enabled(bool value) {
  _internal_set_enabled(value);
  // @@protoc_insertion_point(field_set:PbGpioConfiguration.PbGpioCfgData.enabled)
}

// .PbGpioConfiguration.PbGpioCfgData.Mode mode = 4;
inline void PbGpioConfiguration_PbGpioCfgData::clear_mode() {
  mode_ = 0;
}
inline ::PbGpioConfiguration_PbGpioCfgData_Mode PbGpioConfiguration_PbGpioCfgData::_internal_mode() const {
  return static_cast< ::PbGpioConfiguration_PbGpioCfgData_Mode >(mode_);
}
inline ::PbGpioConfiguration_PbGpioCfgData_Mode PbGpioConfiguration_PbGpioCfgData::mode() const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.PbGpioCfgData.mode)
  return _internal_mode();
}
inline void PbGpioConfiguration_PbGpioCfgData::_internal_set_mode(::PbGpioConfiguration_PbGpioCfgData_Mode value) {
  
  mode_ = value;
}
inline void PbGpioConfiguration_PbGpioCfgData::set_mode(::PbGpioConfiguration_PbGpioCfgData_Mode value) {
  _internal_set_mode(value);
  // @@protoc_insertion_point(field_set:PbGpioConfiguration.PbGpioCfgData.mode)
}

// int32 deviceID = 5;
inline void PbGpioConfiguration_PbGpioCfgData::clear_deviceid() {
  deviceid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration_PbGpioCfgData::_internal_deviceid() const {
  return deviceid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration_PbGpioCfgData::deviceid() const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.PbGpioCfgData.deviceID)
  return _internal_deviceid();
}
inline void PbGpioConfiguration_PbGpioCfgData::_internal_set_deviceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  deviceid_ = value;
}
inline void PbGpioConfiguration_PbGpioCfgData::set_deviceid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_deviceid(value);
  // @@protoc_insertion_point(field_set:PbGpioConfiguration.PbGpioCfgData.deviceID)
}

// int32 axiChl = 6;
inline void PbGpioConfiguration_PbGpioCfgData::clear_axichl() {
  axichl_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration_PbGpioCfgData::_internal_axichl() const {
  return axichl_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration_PbGpioCfgData::axichl() const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.PbGpioCfgData.axiChl)
  return _internal_axichl();
}
inline void PbGpioConfiguration_PbGpioCfgData::_internal_set_axichl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  axichl_ = value;
}
inline void PbGpioConfiguration_PbGpioCfgData::set_axichl(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_axichl(value);
  // @@protoc_insertion_point(field_set:PbGpioConfiguration.PbGpioCfgData.axiChl)
}

// int32 pinNum = 7;
inline void PbGpioConfiguration_PbGpioCfgData::clear_pinnum() {
  pinnum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration_PbGpioCfgData::_internal_pinnum() const {
  return pinnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration_PbGpioCfgData::pinnum() const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.PbGpioCfgData.pinNum)
  return _internal_pinnum();
}
inline void PbGpioConfiguration_PbGpioCfgData::_internal_set_pinnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  pinnum_ = value;
}
inline void PbGpioConfiguration_PbGpioCfgData::set_pinnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_pinnum(value);
  // @@protoc_insertion_point(field_set:PbGpioConfiguration.PbGpioCfgData.pinNum)
}

// .PbGpioConfiguration.PbGpioCfgData.VoltageLevel initLevel = 8;
inline void PbGpioConfiguration_PbGpioCfgData::clear_initlevel() {
  initlevel_ = 0;
}
inline ::PbGpioConfiguration_PbGpioCfgData_VoltageLevel PbGpioConfiguration_PbGpioCfgData::_internal_initlevel() const {
  return static_cast< ::PbGpioConfiguration_PbGpioCfgData_VoltageLevel >(initlevel_);
}
inline ::PbGpioConfiguration_PbGpioCfgData_VoltageLevel PbGpioConfiguration_PbGpioCfgData::initlevel() const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.PbGpioCfgData.initLevel)
  return _internal_initlevel();
}
inline void PbGpioConfiguration_PbGpioCfgData::_internal_set_initlevel(::PbGpioConfiguration_PbGpioCfgData_VoltageLevel value) {
  
  initlevel_ = value;
}
inline void PbGpioConfiguration_PbGpioCfgData::set_initlevel(::PbGpioConfiguration_PbGpioCfgData_VoltageLevel value) {
  _internal_set_initlevel(value);
  // @@protoc_insertion_point(field_set:PbGpioConfiguration.PbGpioCfgData.initLevel)
}

// -------------------------------------------------------------------

// PbGpioConfiguration

// int32 MioBasePinNum = 1;
inline void PbGpioConfiguration::clear_miobasepinnum() {
  miobasepinnum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration::_internal_miobasepinnum() const {
  return miobasepinnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration::miobasepinnum() const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.MioBasePinNum)
  return _internal_miobasepinnum();
}
inline void PbGpioConfiguration::_internal_set_miobasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  miobasepinnum_ = value;
}
inline void PbGpioConfiguration::set_miobasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_miobasepinnum(value);
  // @@protoc_insertion_point(field_set:PbGpioConfiguration.MioBasePinNum)
}

// int32 EmioBasePinNum = 2;
inline void PbGpioConfiguration::clear_emiobasepinnum() {
  emiobasepinnum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration::_internal_emiobasepinnum() const {
  return emiobasepinnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration::emiobasepinnum() const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.EmioBasePinNum)
  return _internal_emiobasepinnum();
}
inline void PbGpioConfiguration::_internal_set_emiobasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  emiobasepinnum_ = value;
}
inline void PbGpioConfiguration::set_emiobasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_emiobasepinnum(value);
  // @@protoc_insertion_point(field_set:PbGpioConfiguration.EmioBasePinNum)
}

// int32 LinuxBasePinNum = 3;
inline void PbGpioConfiguration::clear_linuxbasepinnum() {
  linuxbasepinnum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration::_internal_linuxbasepinnum() const {
  return linuxbasepinnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PbGpioConfiguration::linuxbasepinnum() const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.LinuxBasePinNum)
  return _internal_linuxbasepinnum();
}
inline void PbGpioConfiguration::_internal_set_linuxbasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  linuxbasepinnum_ = value;
}
inline void PbGpioConfiguration::set_linuxbasepinnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_linuxbasepinnum(value);
  // @@protoc_insertion_point(field_set:PbGpioConfiguration.LinuxBasePinNum)
}

// repeated .PbGpioConfiguration.PbGpioCfgData gpioCfgList = 4;
inline int PbGpioConfiguration::_internal_gpiocfglist_size() const {
  return gpiocfglist_.size();
}
inline int PbGpioConfiguration::gpiocfglist_size() const {
  return _internal_gpiocfglist_size();
}
inline void PbGpioConfiguration::clear_gpiocfglist() {
  gpiocfglist_.Clear();
}
inline ::PbGpioConfiguration_PbGpioCfgData* PbGpioConfiguration::mutable_gpiocfglist(int index) {
  // @@protoc_insertion_point(field_mutable:PbGpioConfiguration.gpioCfgList)
  return gpiocfglist_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PbGpioConfiguration_PbGpioCfgData >*
PbGpioConfiguration::mutable_gpiocfglist() {
  // @@protoc_insertion_point(field_mutable_list:PbGpioConfiguration.gpioCfgList)
  return &gpiocfglist_;
}
inline const ::PbGpioConfiguration_PbGpioCfgData& PbGpioConfiguration::_internal_gpiocfglist(int index) const {
  return gpiocfglist_.Get(index);
}
inline const ::PbGpioConfiguration_PbGpioCfgData& PbGpioConfiguration::gpiocfglist(int index) const {
  // @@protoc_insertion_point(field_get:PbGpioConfiguration.gpioCfgList)
  return _internal_gpiocfglist(index);
}
inline ::PbGpioConfiguration_PbGpioCfgData* PbGpioConfiguration::_internal_add_gpiocfglist() {
  return gpiocfglist_.Add();
}
inline ::PbGpioConfiguration_PbGpioCfgData* PbGpioConfiguration::add_gpiocfglist() {
  ::PbGpioConfiguration_PbGpioCfgData* _add = _internal_add_gpiocfglist();
  // @@protoc_insertion_point(field_add:PbGpioConfiguration.gpioCfgList)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::PbGpioConfiguration_PbGpioCfgData >&
PbGpioConfiguration::gpiocfglist() const {
  // @@protoc_insertion_point(field_list:PbGpioConfiguration.gpioCfgList)
  return gpiocfglist_;
}

// -------------------------------------------------------------------

// ProductHwCfg

// string productHwType = 1;
inline void ProductHwCfg::clear_producthwtype() {
  producthwtype_.ClearToEmpty();
}
inline const std::string& ProductHwCfg::producthwtype() const {
  // @@protoc_insertion_point(field_get:ProductHwCfg.productHwType)
  return _internal_producthwtype();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ProductHwCfg::set_producthwtype(ArgT0&& arg0, ArgT... args) {
 
 producthwtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProductHwCfg.productHwType)
}
inline std::string* ProductHwCfg::mutable_producthwtype() {
  std::string* _s = _internal_mutable_producthwtype();
  // @@protoc_insertion_point(field_mutable:ProductHwCfg.productHwType)
  return _s;
}
inline const std::string& ProductHwCfg::_internal_producthwtype() const {
  return producthwtype_.Get();
}
inline void ProductHwCfg::_internal_set_producthwtype(const std::string& value) {
  
  producthwtype_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ProductHwCfg::_internal_mutable_producthwtype() {
  
  return producthwtype_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ProductHwCfg::release_producthwtype() {
  // @@protoc_insertion_point(field_release:ProductHwCfg.productHwType)
  return producthwtype_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ProductHwCfg::set_allocated_producthwtype(std::string* producthwtype) {
  if (producthwtype != nullptr) {
    
  } else {
    
  }
  producthwtype_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), producthwtype,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:ProductHwCfg.productHwType)
}

// string desc = 2;
inline void ProductHwCfg::clear_desc() {
  desc_.ClearToEmpty();
}
inline const std::string& ProductHwCfg::desc() const {
  // @@protoc_insertion_point(field_get:ProductHwCfg.desc)
  return _internal_desc();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ProductHwCfg::set_desc(ArgT0&& arg0, ArgT... args) {
 
 desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProductHwCfg.desc)
}
inline std::string* ProductHwCfg::mutable_desc() {
  std::string* _s = _internal_mutable_desc();
  // @@protoc_insertion_point(field_mutable:ProductHwCfg.desc)
  return _s;
}
inline const std::string& ProductHwCfg::_internal_desc() const {
  return desc_.Get();
}
inline void ProductHwCfg::_internal_set_desc(const std::string& value) {
  
  desc_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ProductHwCfg::_internal_mutable_desc() {
  
  return desc_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ProductHwCfg::release_desc() {
  // @@protoc_insertion_point(field_release:ProductHwCfg.desc)
  return desc_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ProductHwCfg::set_allocated_desc(std::string* desc) {
  if (desc != nullptr) {
    
  } else {
    
  }
  desc_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), desc,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:ProductHwCfg.desc)
}

// string devTtyTypec = 100;
inline void ProductHwCfg::clear_devttytypec() {
  devttytypec_.ClearToEmpty();
}
inline const std::string& ProductHwCfg::devttytypec() const {
  // @@protoc_insertion_point(field_get:ProductHwCfg.devTtyTypec)
  return _internal_devttytypec();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ProductHwCfg::set_devttytypec(ArgT0&& arg0, ArgT... args) {
 
 devttytypec_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProductHwCfg.devTtyTypec)
}
inline std::string* ProductHwCfg::mutable_devttytypec() {
  std::string* _s = _internal_mutable_devttytypec();
  // @@protoc_insertion_point(field_mutable:ProductHwCfg.devTtyTypec)
  return _s;
}
inline const std::string& ProductHwCfg::_internal_devttytypec() const {
  return devttytypec_.Get();
}
inline void ProductHwCfg::_internal_set_devttytypec(const std::string& value) {
  
  devttytypec_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ProductHwCfg::_internal_mutable_devttytypec() {
  
  return devttytypec_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ProductHwCfg::release_devttytypec() {
  // @@protoc_insertion_point(field_release:ProductHwCfg.devTtyTypec)
  return devttytypec_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ProductHwCfg::set_allocated_devttytypec(std::string* devttytypec) {
  if (devttytypec != nullptr) {
    
  } else {
    
  }
  devttytypec_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), devttytypec,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:ProductHwCfg.devTtyTypec)
}

// string devTtyMcu2Ps = 101;
inline void ProductHwCfg::clear_devttymcu2ps() {
  devttymcu2ps_.ClearToEmpty();
}
inline const std::string& ProductHwCfg::devttymcu2ps() const {
  // @@protoc_insertion_point(field_get:ProductHwCfg.devTtyMcu2Ps)
  return _internal_devttymcu2ps();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ProductHwCfg::set_devttymcu2ps(ArgT0&& arg0, ArgT... args) {
 
 devttymcu2ps_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProductHwCfg.devTtyMcu2Ps)
}
inline std::string* ProductHwCfg::mutable_devttymcu2ps() {
  std::string* _s = _internal_mutable_devttymcu2ps();
  // @@protoc_insertion_point(field_mutable:ProductHwCfg.devTtyMcu2Ps)
  return _s;
}
inline const std::string& ProductHwCfg::_internal_devttymcu2ps() const {
  return devttymcu2ps_.Get();
}
inline void ProductHwCfg::_internal_set_devttymcu2ps(const std::string& value) {
  
  devttymcu2ps_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ProductHwCfg::_internal_mutable_devttymcu2ps() {
  
  return devttymcu2ps_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ProductHwCfg::release_devttymcu2ps() {
  // @@protoc_insertion_point(field_release:ProductHwCfg.devTtyMcu2Ps)
  return devttymcu2ps_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ProductHwCfg::set_allocated_devttymcu2ps(std::string* devttymcu2ps) {
  if (devttymcu2ps != nullptr) {
    
  } else {
    
  }
  devttymcu2ps_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), devttymcu2ps,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:ProductHwCfg.devTtyMcu2Ps)
}

// string devTtyWifiBluetooth = 102;
inline void ProductHwCfg::clear_devttywifibluetooth() {
  devttywifibluetooth_.ClearToEmpty();
}
inline const std::string& ProductHwCfg::devttywifibluetooth() const {
  // @@protoc_insertion_point(field_get:ProductHwCfg.devTtyWifiBluetooth)
  return _internal_devttywifibluetooth();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ProductHwCfg::set_devttywifibluetooth(ArgT0&& arg0, ArgT... args) {
 
 devttywifibluetooth_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:ProductHwCfg.devTtyWifiBluetooth)
}
inline std::string* ProductHwCfg::mutable_devttywifibluetooth() {
  std::string* _s = _internal_mutable_devttywifibluetooth();
  // @@protoc_insertion_point(field_mutable:ProductHwCfg.devTtyWifiBluetooth)
  return _s;
}
inline const std::string& ProductHwCfg::_internal_devttywifibluetooth() const {
  return devttywifibluetooth_.Get();
}
inline void ProductHwCfg::_internal_set_devttywifibluetooth(const std::string& value) {
  
  devttywifibluetooth_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ProductHwCfg::_internal_mutable_devttywifibluetooth() {
  
  return devttywifibluetooth_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ProductHwCfg::release_devttywifibluetooth() {
  // @@protoc_insertion_point(field_release:ProductHwCfg.devTtyWifiBluetooth)
  return devttywifibluetooth_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ProductHwCfg::set_allocated_devttywifibluetooth(std::string* devttywifibluetooth) {
  if (devttywifibluetooth != nullptr) {
    
  } else {
    
  }
  devttywifibluetooth_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), devttywifibluetooth,
      GetArenaForAllocation());
  // @@protoc_insertion_point(field_set_allocated:ProductHwCfg.devTtyWifiBluetooth)
}

// .PbGpioConfiguration gpioConfig = 200;
inline bool ProductHwCfg::_internal_has_gpioconfig() const {
  return this != internal_default_instance() && gpioconfig_ != nullptr;
}
inline bool ProductHwCfg::has_gpioconfig() const {
  return _internal_has_gpioconfig();
}
inline void ProductHwCfg::clear_gpioconfig() {
  if (GetArenaForAllocation() == nullptr && gpioconfig_ != nullptr) {
    delete gpioconfig_;
  }
  gpioconfig_ = nullptr;
}
inline const ::PbGpioConfiguration& ProductHwCfg::_internal_gpioconfig() const {
  const ::PbGpioConfiguration* p = gpioconfig_;
  return p != nullptr ? *p : reinterpret_cast<const ::PbGpioConfiguration&>(
      ::_PbGpioConfiguration_default_instance_);
}
inline const ::PbGpioConfiguration& ProductHwCfg::gpioconfig() const {
  // @@protoc_insertion_point(field_get:ProductHwCfg.gpioConfig)
  return _internal_gpioconfig();
}
inline void ProductHwCfg::unsafe_arena_set_allocated_gpioconfig(
    ::PbGpioConfiguration* gpioconfig) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(gpioconfig_);
  }
  gpioconfig_ = gpioconfig;
  if (gpioconfig) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProductHwCfg.gpioConfig)
}
inline ::PbGpioConfiguration* ProductHwCfg::release_gpioconfig() {
  
  ::PbGpioConfiguration* temp = gpioconfig_;
  gpioconfig_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::PbGpioConfiguration* ProductHwCfg::unsafe_arena_release_gpioconfig() {
  // @@protoc_insertion_point(field_release:ProductHwCfg.gpioConfig)
  
  ::PbGpioConfiguration* temp = gpioconfig_;
  gpioconfig_ = nullptr;
  return temp;
}
inline ::PbGpioConfiguration* ProductHwCfg::_internal_mutable_gpioconfig() {
  
  if (gpioconfig_ == nullptr) {
    auto* p = CreateMaybeMessage<::PbGpioConfiguration>(GetArenaForAllocation());
    gpioconfig_ = p;
  }
  return gpioconfig_;
}
inline ::PbGpioConfiguration* ProductHwCfg::mutable_gpioconfig() {
  ::PbGpioConfiguration* _msg = _internal_mutable_gpioconfig();
  // @@protoc_insertion_point(field_mutable:ProductHwCfg.gpioConfig)
  return _msg;
}
inline void ProductHwCfg::set_allocated_gpioconfig(::PbGpioConfiguration* gpioconfig) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete gpioconfig_;
  }
  if (gpioconfig) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper<::PbGpioConfiguration>::GetOwningArena(gpioconfig);
    if (message_arena != submessage_arena) {
      gpioconfig = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gpioconfig, submessage_arena);
    }
    
  } else {
    
  }
  gpioconfig_ = gpioconfig;
  // @@protoc_insertion_point(field_set_allocated:ProductHwCfg.gpioConfig)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::PbGpioConfiguration_PbGpioCfgData_Direction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PbGpioConfiguration_PbGpioCfgData_Direction>() {
  return ::PbGpioConfiguration_PbGpioCfgData_Direction_descriptor();
}
template <> struct is_proto_enum< ::PbGpioConfiguration_PbGpioCfgData_Mode> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PbGpioConfiguration_PbGpioCfgData_Mode>() {
  return ::PbGpioConfiguration_PbGpioCfgData_Mode_descriptor();
}
template <> struct is_proto_enum< ::PbGpioConfiguration_PbGpioCfgData_VoltageLevel> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PbGpioConfiguration_PbGpioCfgData_VoltageLevel>() {
  return ::PbGpioConfiguration_PbGpioCfgData_VoltageLevel_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ProductHwCfg_2eproto
